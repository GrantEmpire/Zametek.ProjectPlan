<Window x:Class="Zametek.View.ProjectPlan.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:Zametek.View.ProjectPlan"
        xmlns:properties="clr-namespace:Zametek.View.ProjectPlan.Properties"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:avalonDock="clr-namespace:AvalonDock;assembly=AvalonDock"
        xmlns:avalonDockLayout="clr-namespace:AvalonDock.Layout;assembly=AvalonDock"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:common="clr-namespace:Zametek.Common.ProjectPlan;assembly=Zametek.Common.ProjectPlan"
        prism:ViewModelLocator.AutoWireViewModel="False"
        mc:Ignorable="d" 
        Title="{Binding Path=Title, Mode=OneWay}"
        Height="680" Width="1200"
        MinHeight="680" MinWidth="850">
    <i:Interaction.Triggers>
        <prism:InteractionRequestTrigger SourceObject="{Binding Path=ConfirmationInteractionRequest, Mode=OneWay}">
            <prism:PopupWindowAction IsModal="True"
                                     CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowStyle>
                    <Style TargetType="{x:Type Window}">
                        <Setter Property="SizeToContent" Value="WidthAndHeight"/>
                        <Setter Property="ResizeMode" Value="NoResize"/>
                    </Style>
                </prism:PopupWindowAction.WindowStyle>
                <prism:PopupWindowAction.WindowContent>
                    <local:BasicConfirmationView />
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>

        <prism:InteractionRequestTrigger SourceObject="{Binding Path=NotificationInteractionRequest, Mode=OneWay}">
            <prism:PopupWindowAction IsModal="True"
                                     CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowStyle>
                    <Style TargetType="{x:Type Window}">
                        <Setter Property="SizeToContent" Value="WidthAndHeight"/>
                        <Setter Property="ResizeMode" Value="NoResize"/>
                    </Style>
                </prism:PopupWindowAction.WindowStyle>
                <prism:PopupWindowAction.WindowContent>
                    <local:BasicNotificationView />
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>

        <prism:InteractionRequestTrigger SourceObject="{Binding Path=ResourceSettingsManagerInteractionRequest, Mode=OneWay}">
            <prism:PopupWindowAction IsModal="True"
                                     CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowStyle>
                    <Style TargetType="{x:Type Window}">
                        <Setter Property="MinHeight" Value="250"/>
                        <Setter Property="Height" Value="450"/>
                        <Setter Property="MinWidth" Value="450"/>
                        <Setter Property="Width" Value="1000"/>
                        <Setter Property="ResizeMode" Value="CanResize"/>
                    </Style>
                </prism:PopupWindowAction.WindowStyle>
                <prism:PopupWindowAction.WindowContent>
                    <local:ResourceSettingsManagerView />
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>

        <prism:InteractionRequestTrigger SourceObject="{Binding Path=ArrowGraphSettingsManagerInteractionRequest, Mode=OneWay}">
            <prism:PopupWindowAction IsModal="True"
                                     CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowStyle>
                    <Style TargetType="{x:Type Window}">
                        <Setter Property="MinHeight" Value="250"/>
                        <Setter Property="Height" Value="250"/>
                        <Setter Property="MinWidth" Value="350"/>
                        <Setter Property="Width" Value="350"/>
                        <Setter Property="ResizeMode" Value="CanMinimize"/>
                    </Style>
                </prism:PopupWindowAction.WindowStyle>
                <prism:PopupWindowAction.WindowContent>
                    <local:ArrowGraphSettingsManagerView />
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>

        <prism:InteractionRequestTrigger SourceObject="{Binding Path=AboutInteractionRequest, Mode=OneWay}">
            <prism:PopupWindowAction IsModal="True"
                                     CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowStyle>
                    <Style TargetType="{x:Type Window}">
                        <Setter Property="SizeToContent" Value="WidthAndHeight"/>
                        <Setter Property="ResizeMode" Value="NoResize"/>
                    </Style>
                </prism:PopupWindowAction.WindowStyle>
                <prism:PopupWindowAction.WindowContent>
                    <local:AboutView />
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>
    </i:Interaction.Triggers>

    <Window.InputBindings>
        <KeyBinding Gesture="Ctrl+O" Command="{Binding Path=OpenProjectPlanFileCommand, Mode=OneWay}"/>
        <KeyBinding Gesture="Ctrl+S" Command="{Binding Path=SaveProjectPlanFileCommand, Mode=OneWay}"/>
        <KeyBinding Gesture="Ctrl+R" Command="{Binding Path=OpenResourceSettingsCommand, Mode=OneWay}"/>
        <KeyBinding Gesture="Ctrl+G" Command="{Binding Path=OpenArrowGraphSettingsCommand, Mode=OneWay}"/>
        <KeyBinding Gesture="Ctrl+D" Command="{Binding Path=ToggleShowDatesCommand, Mode=OneWay}"/>
        <KeyBinding Gesture="Ctrl+B" Command="{Binding Path=ToggleUseBusinessDaysCommand, Mode=OneWay}"/>
    </Window.InputBindings>

    <DockPanel Margin="7">
        <Menu DockPanel.Dock="Top"
              Padding="3">
            <MenuItem Header="{x:Static properties:Resources.Label_File}">
                <MenuItem Header="{x:Static properties:Resources.Label_Open}"
                          Command="{Binding Path=OpenProjectPlanFileCommand, Mode=OneWay}"
                          InputGestureText="Ctrl+O"/>
                <Separator />
                <MenuItem Header="{x:Static properties:Resources.Label_Save}"
                          Command="{Binding Path=SaveProjectPlanFileCommand, Mode=OneWay}"
                          InputGestureText="Ctrl+S"/>
                <MenuItem Header="{x:Static properties:Resources.Label_SaveAs}"
                          Command="{Binding Path=SaveAsProjectPlanFileCommand, Mode=OneWay}"/>
                <Separator />
                <MenuItem Header="{x:Static properties:Resources.Label_Import}"
                          Command="{Binding Path=ImportMicrosoftProjectCommand, Mode=OneWay}"/>
                <Separator />
                <MenuItem Header="{x:Static properties:Resources.Label_Close}"
                          Command="{Binding Path=CloseProjectCommand, Mode=OneWay}"/>
            </MenuItem>
            <MenuItem Header="{x:Static properties:Resources.Label_Settings}">
                <MenuItem Header="{x:Static properties:Resources.Label_ResourceSettings}"
                          Command="{Binding Path=OpenResourceSettingsCommand, Mode=OneWay}"
                          InputGestureText="Ctrl+R"/>
                <Separator />
                <MenuItem Header="{x:Static properties:Resources.Label_ArrowGraphSettings}"
                          Command="{Binding Path=OpenArrowGraphSettingsCommand, Mode=OneWay}"
                          InputGestureText="Ctrl+G"/>
                <Separator />
                <MenuItem Header="{x:Static properties:Resources.Label_ShowDates}"
                          IsCheckable="True"
                          IsChecked="{Binding Path=ShowDates, Mode=TwoWay}"
                          InputGestureText="Ctrl+D"/>
                <MenuItem Header="{x:Static properties:Resources.Label_UseBusinessDays}"
                          IsCheckable="True"
                          IsChecked="{Binding Path=UseBusinessDays, Mode=TwoWay}"
                          InputGestureText="Ctrl+B"/>
            </MenuItem>
            <MenuItem Header="{x:Static properties:Resources.Label_Compile}">
                <MenuItem Header="{x:Static properties:Resources.Label_ResourcedCyclomaticComplexity}"
                          Command="{Binding Path=CalculateResourcedCyclomaticComplexityCommand, Mode=OneWay}"/>
                <MenuItem Header="{x:Static properties:Resources.Label_Compile}"
                          Command="{Binding Path=CompileCommand, Mode=OneWay}"/>
                <MenuItem Header="{x:Static properties:Resources.Label_AutoCompile}"
                          IsCheckable="True"
                          IsChecked="{Binding Path=AutoCompile, Mode=TwoWay}"/>
                <MenuItem Header="{x:Static properties:Resources.Label_TransitiveReduction}"
                          Command="{Binding Path=TransitiveReductionCommand, Mode=OneWay}"/>
            </MenuItem>
            <MenuItem Header="{x:Static properties:Resources.Label_Help}">
                <MenuItem Header="{x:Static properties:Resources.Label_Documentation}"
                          Command="{Binding Path=OpenHyperLinkCommand, Mode=OneWay}"
                          CommandParameter="{x:Static properties:Resources.Link_Documentation}"/>
                <Separator />
                <MenuItem Header="{x:Static properties:Resources.Label_ReportIssue}"
                          Command="{Binding Path=OpenHyperLinkCommand, Mode=OneWay}"
                          CommandParameter="{x:Static properties:Resources.Link_ReportIssue}"/>
                <Separator />
                <MenuItem Header="{x:Static properties:Resources.Label_ViewLicense}"
                          Command="{Binding Path=OpenHyperLinkCommand, Mode=OneWay}"
                          CommandParameter="{x:Static properties:Resources.Link_ViewLicense}"/>
                <Separator />
                <MenuItem Header="{x:Static properties:Resources.Label_About}"
                          Command="{Binding Path=OpenAboutCommand, Mode=OneWay}"/>
            </MenuItem>
        </Menu>

        <DockPanel DockPanel.Dock="Bottom"
                   Margin="0,11,0,0">
            <Label DockPanel.Dock="Left"
                   IsTabStop="False"
                   Content="{x:Static properties:Resources.Label_ProjectStart}"
                   Height="25"
                   Margin="0,0,7,0"/>

            <xctk:DateTimePicker DockPanel.Dock="Left"
                                 Value="{Binding Path=ProjectStart, Mode=TwoWay}"
                                 TimePickerVisibility="Hidden"
                                 ShowButtonSpinner="False"
                                 Format="Custom"
                                 FormatString="d" 
                                 IsTabStop="True"
                                 Margin="0,0,11,0"
                                 Height="25"
                                 Width="85"
                                 VerticalAlignment="Center"
                                 VerticalContentAlignment="Center"/>

            <Grid/>
        </DockPanel>

        <avalonDock:DockingManager x:Name="DockManager"
                                   AllowMixedOrientation="True"
                                   BorderBrush="Black"
                                   BorderThickness="1">
            <avalonDockLayout:LayoutRoot x:Name="_layoutRoot">
                <avalonDockLayout:LayoutPanel Orientation="Vertical">
                    <avalonDockLayout:LayoutPanel Orientation="Horizontal">
                        <avalonDockLayout:LayoutAnchorablePane>
                            <avalonDockLayout:LayoutAnchorable ContentId="Activities"
                                                               Title="{x:Static properties:Resources.Label_ActivitiesViewTitle}"
                                                               CanHide="False"
                                                               CanClose="False">
                                <ContentControl prism:RegionManager.RegionName="{x:Static common:RegionNames.ProjectPlanActivitiesRegion}" />
                            </avalonDockLayout:LayoutAnchorable>

                            <avalonDockLayout:LayoutAnchorable ContentId="GanttChart"
                                                               Title="{x:Static properties:Resources.Label_GanttChartViewTitle}"
                                                               CanHide="False"
                                                               CanClose="False">
                                <ContentControl prism:RegionManager.RegionName="{x:Static common:RegionNames.ProjectPlanGanttChartRegion}" />
                            </avalonDockLayout:LayoutAnchorable>

                            <avalonDockLayout:LayoutAnchorable ContentId="ArrowGraph"
                                                               Title="{x:Static properties:Resources.Label_ArrowGraphViewTitle}"
                                                               CanHide="False"
                                                               CanClose="False">
                                <ContentControl prism:RegionManager.RegionName="{x:Static common:RegionNames.ProjectPlanArrowGraphRegion}" />
                            </avalonDockLayout:LayoutAnchorable>

                            <!--<avalonDockLayout:LayoutAnchorable ContentId="ResourceChart"
                                                               Title="{x:Static properties:Resources.Label_ResourceChartsViewTitle}"
                                                               CanHide="False"
                                                               CanClose="False">
                                <ContentControl prism:RegionManager.RegionName="{x:Static common:RegionNames.ProjectPlanResourceChartRegion}" />
                            </avalonDockLayout:LayoutAnchorable>

                            <avalonDockLayout:LayoutAnchorable ContentId="EarnedValueChart"
                                                               Title="{x:Static properties:Resources.Label_EarnedValueChartsViewTitle}"
                                                               CanHide="False"
                                                               CanClose="False">
                                <ContentControl prism:RegionManager.RegionName="{x:Static common:RegionNames.ProjectPlanEarnedValueChartRegion}" />
                            </avalonDockLayout:LayoutAnchorable>-->
                        </avalonDockLayout:LayoutAnchorablePane>
                    </avalonDockLayout:LayoutPanel>
                </avalonDockLayout:LayoutPanel>
            </avalonDockLayout:LayoutRoot>
        </avalonDock:DockingManager>

        <DockPanel.Style>
            <Style TargetType="DockPanel">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsBusy, Mode=OneWay}" Value="True">
                        <Setter Property="IsEnabled" Value="False"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=IsBusy, Mode=OneWay}" Value="False">
                        <Setter Property="IsEnabled" Value="True"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </DockPanel.Style>
    </DockPanel>

    <Window.Style>
        <Style TargetType="Window">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsBusy, Mode=OneWay}" Value="True">
                    <Setter Property="Cursor" Value="Wait"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=IsBusy, Mode=OneWay}" Value="False">
                    <Setter Property="Cursor" Value="Arrow"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Style>
</Window>
